/api/auth/v1/create:
  post:
    summary: Create an account
    tags:
      - Authentication module
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The user's fullname
                example: "John Doe"
              email:
                type: string
                description: The user's email
                example: "john@doe.com"
              password:
                type: string
                description: The password of the user.
                example: "securepassword"
    responses:
      201:
        description: Account successfully created
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "EMAIL_IN_USE"
            message: "Email already in use"
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/activate:
  post:
    summary: Activate account
    tags:
      - Authentication module
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: The jwt code
                example: "eyjdhfakhskdj..."
    responses:
      200:
        description: Account activated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
          - code: "EMAIL_IN_USE"
            message: "Email already in use"
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/signin:
  post:
    summary: Login to account
    tags:
      - Authentication module
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                description: The user's email
                example: "john@doe.com"
              password:
                type: string
                description: The password of the user.
                example: "securepassword"
    responses:
      200:
        description: Signed in successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "907b4e94-fc20-4ff2-9c3e-ee4af7ace00c"
                    name:
                      type: string
                      example: "John Doe"
                    email:
                      type: string
                      example: "john@doe.com"
                    type:
                      type: string
                      example: "Client"
                    accessToken:
                      type: string
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjkwN2I0ZTk0LWZjMjAtNGZmMi05YzNlLWVlNGFmN2FjZTAwYyIsImVtYWlsIjoiZGlhbGxpYWJkb3VyYWhtYW43OEBnbWFpbC5jb20iLCJ0eXBlIjoiQWRtaW4iLCJpYXQiOjE3MzQ0NzEwNzAsImV4cCI6MTczNDU1NzQ3MH0.AyXQyjEIf8GqUv5dtJwMrPhkvy0uKJUdZpS7dxGasW0"
                    refreshToken:
                      type: string
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjkwN2I0ZTk0LWZjMjAtNGZmMi05YzNlLWVlNGFmN2FjZTAwYyIsImlhdCI6MTczNDQ3MTA3MCwiZXhwIjoxNzM1MDc1ODcwfQ.9W54La-NAMTAiKA7aC3FTaX5AmVB6p5DcBGQaCXcrDI"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "UNABLE_TO_LOGIN"
            message: "Unable to login"
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/forgot-password:
  post:
    summary: Forgot password
    tags:
      - Authentication module
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                description: The user's email
                example: "john@doe.com"
    responses:
      200:
        description: Email sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"

      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Email must be valid"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/token:
  post:
    summary: Refresh token
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {refresh_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    responses:
      200:
        description: Email sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "907b4e94-fc20-4ff2-9c3e-ee4af7ace00c"
                    name:
                      type: string
                      example: "John Doe"
                    email:
                      type: string
                      example: "john@doe.com"
                    type:
                      type: string
                      example: "Client"
                    accessToken:
                      type: string
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjkwN2I0ZTk0LWZjMjAtNGZmMi05YzNlLWVlNGFmN2FjZTAwYyIsImVtYWlsIjoiZGlhbGxpYWJkb3VyYWhtYW43OEBnbWFpbC5jb20iLCJ0eXBlIjoiQWRtaW4iLCJpYXQiOjE3MzQ0NzEwNzAsImV4cCI6MTczNDU1NzQ3MH0.AyXQyjEIf8GqUv5dtJwMrPhkvy0uKJUdZpS7dxGasW0"
                    refreshToken:
                      type: string
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjkwN2I0ZTk0LWZjMjAtNGZmMi05YzNlLWVlNGFmN2FjZTAwYyIsImlhdCI6MTczNDQ3MTA3MCwiZXhwIjoxNzM1MDc1ODcwfQ.9W54La-NAMTAiKA7aC3FTaX5AmVB6p5DcBGQaCXcrDI"

      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_REFRESH_TOKEN"
            message: "No refresh token"
          - code: "REUSE_DETECTION"
            message: "Reuse detection"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "REFRESH_TOKEN_EXPIRED"
            message: "Refresh token has expired, login again."
          - code: "UNAUTHORIZED"
            message: "Not authorized"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/logout:
  post:
    summary: Logout
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    responses:
      200:
        description: Email sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"

      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/restore-deleted-user/{id}:
  post:
    summary: Delete account
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    responses:
      200:
        description: Email sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"

      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
          - code: "MAX_ADMINS"
            message: "Maximum number of admins in the system is 3"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/admin-deactivates-account/{id}:
  post:
    summary: Deactivate account
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    responses:
      200:
        description: Email sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"

      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/admin-activates-account/{id}:
  post:
    summary: Activate account
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    responses:
      200:
        description: Email sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"

      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/create-admin:
  post:
    summary: Create admin
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The user's fullname
                example: "John Doe"
              email:
                type: string
                description: The user's email
                example: "john@doe.com"
              password:
                type: string
                description: The password of the user.
                example: "securepassword"
    responses:
      200:
        description: Email sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "EMAIL_IN_USE"
            message: "Email already in use"
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
          - code: "MAX_ADMINS"
            message: "Maximum number of admins in the system is 3"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/update:
  patch:
    summary: Update account
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The user's fullname
                example: "John Doe"
    responses:
      200:
        description: Account updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "907b4e94-fc20-4ff2-9c3e-ee4af7ace00c"
                    name:
                      type: string
                      example: "John Doe"
                    email:
                      type: string
                      example: "john@doe.com"
                    type:
                      type: string
                      example: "Client"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Name must be valid, Password must be between 5 and 20 characters"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/reset-password:
  patch:
    summary: Reset password
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: The jwt code
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              password:
                type: string
                description: The new password
                example: "securepassword"
    responses:
      200:
        description: Password reset successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Code must be valid, Password must be between 5 and 20 characters"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/update-password:
  patch:
    summary: Update password
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              oldPassword:
                type: string
                description: The old password
                example: "oldPassword"
              newPassword:
                type: string
                description: The new password
                example: "securepassword"
              confirmNewPassword:
                type: string
                description: Confirm the new password
                example: "securepassword"
    responses:
      200:
        description: Password updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "VALIDATION_REQUEST_ERROR"
            message: "Code must be valid, Password must be between 5 and 20 characters"
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
          - code: "PASSWORD_DOES_NOT_MATCH"
            message: "The password provided should match the old password"
          - code: "PASSWORDS_MUST_BE_THE_SAME"
            message: "NewPassword and ConfirmNewPassword should be the same"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/profile:
  get:
    summary: Get profile information
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    responses:
      200:
        description: Profile info
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "907b4e94-fc20-4ff2-9c3e-ee4af7ace00c"
                    name:
                      type: string
                      example: "John Doe"
                    email:
                      type: string
                      example: "john@doe.com"
                    type:
                      type: string
                      example: "Client"
      400:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "ACCOUNT_DELETED"
            message: "Account has been deleted, contact support team."
          - code: "ACCOUNT_NOT_ACTIVATED"
            message: "Account exists but has not been activated, check your email."
          - code: "PASSWORD_DOES_NOT_MATCH"
            message: "The password provided should match the old password"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/users:
  get:
    summary: Get list of users
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      - name: page
        in: query
        required: false
        description: The page number for paginated results
        schema:
          type: integer
          example: 1
      - name: itemsPerPage
        in: query
        required: false
        description: The total items in each page
        schema:
          type: integer
          example: 10
      - name: name
        in: query
        required: false
        description: The name of the item
        schema:
          type: string
          example: "john"
      - name: userType
        in: query
        required: false
        description: The user type Admin or Client
        schema:
          type: string
          example: "Client"
    responses:
      200:
        description: Get users
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
                totalPages:
                  type: number
                  example: 1
                itemsPerPage:
                  type: number
                  example: "SUCCESS"
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "907b4e94-fc20-4ff2-9c3e-ee4af7ace00c"
                      name:
                        type: string
                        example: "John Doe"
                      email:
                        type: string
                        example: "john@doe.com"
                      type:
                        type: string
                        example: "Client"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"

/api/auth/v1/delete/{id}:
  delete:
    summary: Delete account
    tags:
      - Authentication module
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token (e.g., `Bearer {access_token}`)
        schema:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    responses:
      200:
        description: Account deleted successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "SUCCESS"
      400:
        description: "Provide an ID"
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "VALIDATION_REQUEST_ERROR"
                message:
                  type: string
                  example: "Provide an ID"
      401:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                message:
                  type: string
        x-errors:
          - code: "NO_ACCESS_TOKEN"
            message: "No access token"
          - code: "ACCESS_TOKEN_EXPIRED"
            message: "Access token expired"
          - code: "CANNOT_DECODE_TOKEN"
            message: "Cannot decode refresh token"
          - code: "NOT_ALLOWED"
            message: "You are not allowed to perform this action."
      404:
        description: Various error scenarios, check yaml files.
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Unexpected server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "UNEXPECTED_ERROR"
                message:
                  type: string
                  example: "Something went wrong"
